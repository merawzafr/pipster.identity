version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: pipster-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: pipster_identity_dev
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - pipster-network

  # Identity Server (when running via docker-compose)
  identity:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: pipster-identity
    restart: unless-stopped
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:443;http://+:80
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=pipster_identity_dev;Username=postgres;Password=postgres
    ports:
      - "5000:80"
      - "5001:443"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - pipster-network

volumes:
  postgres_data:
    driver: local

networks:
  pipster-network:
    driver: bridge